<%

var log = new Log();
var spClient = require('../custom/spAdminClient.jag');

var i18n = session.get("i18n");
function addSP(){

    try{

        var cookie = session.get('auth-cookie');
        if(cookie == null){
            var cookie = request.getParameter("cookie");
            session.put('auth-cookie', cookie);
            var userName = request.getParameter("user");
            log.error(userName)
            session.put("user",userName);
        }

        var spName = request.getParameter('spName');
        var spDesc = request.getParameter('spDesc');

        var createApp = <xsd:createApplication xmlns:xsd ="http://org.apache.axis2/xsd" xmlns:xsd1="http://model.common.application.identity.carbon.wso2.org/xsd">

                </xsd:createApplication>

        var serviceProvider =        <xsd:serviceProvider xmlns:xsd ="http://org.apache.axis2/xsd" xmlns:xsd1="http://model.common.application.identity.carbon.wso2.org/xsd">
                <xsd1:applicationName></xsd1:applicationName>
        <xsd1:description></xsd1:description>
        </xsd:serviceProvider>
        serviceProvider.*::applicationName.setChildren(spName);
        serviceProvider.*::description.setChildren(spDesc);
        createApp.appendChild(serviceProvider);
        spClient.createApplication(createApp);
    }catch(e){
        log.error(e);
        print("This didn't work" + getErrorMessage(e.message));

    }

}
addSP();
function getErrorMessage(message) {
    if (message != null && message.length > 0) {
        if (message.indexOf('401 Error: Unauthorized') > -1) {
            return '{"success":false, "reLogin":true}';
        } else {
            var msg = message.split(':');
            if (msg.length > 0) {
                return '{"success":false, "message":"' + msg[1] + '"}';
            }
        }
    }
    return '{"success":false, "message":null}';
}

%>